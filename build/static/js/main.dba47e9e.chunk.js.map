{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/errorBoundary/ErrorBoundary.js","components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/MarvelService.js","services/AbreviationText.js","components/spinner/Spinner.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","ErrorBoundary","Component","constructor","arguments","state","error","componentDidCatch","errorInfo","console","log","this","setState","render","props","children","AppHeader","_jsxs","className","href","MarvelService","_this","_apiBase","_apiKey","_limitCharacters","_offsetCharacters","getResource","async","res","fetch","url","ok","Error","concat","status","json","getAllCharacters","limit","length","undefined","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","AbriviationText","text","quantityChar","slice","Spinner","xmlns","background","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","RandomChar","super","marvelService","onCharLoaded","loading","onError","onLoading","updateChar","Math","floor","random","then","catch","componentDidMount","errorMessage","spinner","randomCharBlock","RandomCharBlock","onClick","mjolnir","_ref","imgStyle","target","rel","CharList","charList","selectedCharId","limitEnded","newCharLoading","onCharListLoaded","onShowNewCharacters","onChangeSelectedChar","onUpdateSelectedChar","renderCharList","arr","item","clazzName","content","disabled","Skeleton","_Fragment","CharInfo","renderCharInfo","selectedChar","renderComics","index","App","decoration","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.dba47e9e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { Component } from \"react\";\r\nimport ErrorMessage from '../errorMessage/ErrorMessage'\r\n\r\nclass ErrorBoundary extends Component{\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo){\r\n        console.log(error, errorInfo);\r\n        this.setState({error: true});\r\n    }\r\n\r\n    render(){\r\n        if(this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","class MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=95c456a7ea2c5345495bb580c088c93e';\r\n    _limitCharacters = 9;\r\n    _offsetCharacters = 210;\r\n\r\n    getResource = async (url) => {\r\n        let res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Не удалось получить ${url}, статус: ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async (limit = this._limitCharacters, offset = this._offsetCharacters) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=${limit}&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter);\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description,\r\n            thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelService;","const AbriviationText = (text, quantityChar) => {\r\n    if(text.length === 0) {\r\n        return 'К сожалению, мы ещё не написали описание для этого персонажа :)'\r\n    }\r\n\r\n    if (text.length < quantityChar) {\r\n        return text;\r\n    };\r\n\r\n    return text.slice(0, quantityChar - 3) + '...';\r\n}\r\n\r\nexport default AbriviationText;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport MarvelService from '../../services/MarvelService';\nimport { Component } from 'react';\nimport AbriviationText from '../../services/AbreviationText';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass RandomChar extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            char: {},\n            loading: true,\n            error: false\n        }\n    }\n    \n    componentDidMount(){\n        this.updateChar();\n    }\n\n    marvelService = new MarvelService();\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char: {...char, description: AbriviationText(char.description, 230)},\n            loading: false\n        });\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    onLoading = () => {\n        this.setState({\n            error: false,\n            loading: true\n        })\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        \n        this.onLoading();\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    \n    render(){\n        const {char, loading, error} = this.state;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const randomCharBlock = !(error || loading) ? <RandomCharBlock char={char}/> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {spinner}\n                {errorMessage}\n                {randomCharBlock}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button \n                    className=\"button button__main\"\n                    onClick={this.updateChar}>\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst RandomCharBlock = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n                    <img src={thumbnail} alt={`Изображение ${name}`} className=\"randomchar__img\" style={imgStyle}/>\n                    <div className=\"randomchar__info\">\n                        <p className=\"randomchar__name\">{name}</p>\n                        <p className=\"randomchar__descr\">{description}</p>\n                        <div className=\"randomchar__btns\">\n                            <a href={homepage} className=\"button button__main\" target=\"_blank\" rel=\"noreferrer\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\" target=\"_blank\" rel=\"noreferrer\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n    )\n}\nexport default RandomChar;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport MarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\n\nimport './charList.scss';\n\nclass CharList extends Component {\n    \n    state = {\n        charList: [],\n        selectedCharId: null,\n        loading: true,\n        error: false,\n        offset: 210,\n        limitEnded: false,\n        newCharLoading: false\n    }\n\n    marvelService = new MarvelService();\n\n    onCharListLoaded = (charList) => {\n        this.setState(state => {\n            let limitEnded = false;\n\n            if (1564 - state.offset <= 9) {\n                limitEnded = true;\n            }\n\n            return {\n                charList: [...state.charList, ...charList],\n                loading: false,\n                error: false,\n                newCharLoading: false,\n                offset: state.offset + 9,\n                limitEnded\n            }\n        })\n\n    }\n\n    onShowNewCharacters = () => {\n        this.setState({newCharLoading: true})\n\n        this.marvelService.getAllCharacters(9, this.state.offset)\n            .then(charList => this.onCharListLoaded(charList))\n            .catch(this.onError)\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    onChangeSelectedChar = (char) => {\n        this.props.onUpdateSelectedChar(char);\n        this.setState({selectedCharId: char.id})\n    }\n\n    componentDidMount() {\n        this.onShowNewCharacters();\n    }\n\n    renderCharList = (arr) => {\n        const charList = arr.map(item => {\n            let imgStyle = {\"objectFit\" : \"cover\"};\n            if(item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {\"objectFit\" : \"unset\"}\n            }\n\n            const clazzName = this.state.selectedCharId === item.id ? 'char__item char__item_selected' : 'char__item';\n            \n            return (\n                <li className={clazzName}\n                    key={item.id}\n                    onClick={() => this.onChangeSelectedChar(item)}>\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        })\n        \n        return (\n            <ul className=\"char__grid\">\n                {charList}\n            </ul>\n        )\n    }\n\n    render(){\n        const {charList, loading, error, limitEnded, newCharLoading} = this.state;\n        \n        const spinner = loading ? <Spinner/> : null;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const content = !(loading || error) ? this.renderCharList(charList) : null;\n\n        return (\n            <div className=\"char__list\">\n                {spinner}\n                {errorMessage}\n                {content}\n                <button \n                className=\"button button__main button__long\"\n                onClick={this.onShowNewCharacters}\n                style={{'display': limitEnded ? 'none' : 'block'}}\n                disabled={newCharLoading}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nCharList.propTypes = {\n    onUpdateSelectedChar: PropTypes.func\n}\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Skeleton from '../skeleton/Skeleton'\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n\n    renderCharInfo = (selectedChar) => {\n        const {name, description, thumbnail, homepage, wiki, comics} = selectedChar;\n        const imgStyle = thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ? {\"objectFit\": \"unset\"} : {\"objectFit\": \"cover\"}\n\n        return(\n            <>\n                <div className=\"char__basics\">\n                    <img src={thumbnail} \n                    alt={name}\n                    style={imgStyle}/>\n                    <div>\n                        <div className=\"char__info-name\">{name}</div>\n                        <div className=\"char__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"char__descr\">\n                    {description}\n                </div>\n                {this.renderComics(comics)}\n            </>    \n        )\n    }\n    \n    renderComics = (comics) => {\n        return (\n            <>\n                <div className=\"char__comics\">Comics:</div>\n                {comics.length === 0 ? <div>Комиксов с этим персонажем нет</div> : null}\n                <ul className=\"char__comics-list\">\n                    {\n                        comics.map((item, index) => {\n                            if (index > 8) return null;\n    \n                            return (\n                                <li \n                                className=\"char__comics-item\"\n                                key={index}\n                                >\n                                    {item.name}\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n            </>\n        )\n    }\n\n    render() {\n        const {selectedChar} = this.props;\n        const content = selectedChar ? this.renderCharInfo(selectedChar) : <Skeleton/>\n\n        return (\n            <div className=\"char__info\">\n                {content}\n            </div>\n        )\n    }\n}\n\nCharInfo.propTypes = {\n    selectedChar: PropTypes.object\n}\n\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport decoration from '../../resources/img/vision.png';\n\n\nclass App extends Component {\n    state = {\n        selectedChar: null\n    }\n\n    onUpdateSelectedChar = (char) => {\n        this.setState({selectedChar: char})\n    }\n\n    render(){\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>\n                    \n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onUpdateSelectedChar={this.onUpdateSelectedChar}/>\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo selectedChar={this.state.selectedChar}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n    <App />, document.getElementById('root')\n);\n\n"],"sourceRoot":""}