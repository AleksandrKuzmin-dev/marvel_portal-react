{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/spinner/Spinner.js","services/MarvelService.js","hooks/http.hook.js","components/errorBoundary/ErrorBoundary.js","components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/AbreviationText.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/searchChar/SearchChar.js","resources/img/vision.png","components/pages/MainPage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/singleCharacter/SingleCharacter.js","components/pages/SingleCharacterPage.js","components/app/App.js","index.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","Spinner","_jsxs","xmlns","background","viewBox","preserveAspectRatio","children","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","MarvelService","_apiBase","_apiKey","loading","error","request","useHttp","setLoading","useState","setError","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","Error","concat","status","data","json","_transformCharacter","char","id","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","_transformComics","_comics$textObjects$","title","language","textObjects","pages","pageCount","price","prices","getAllCharacters","limit","offset","res","results","map","getCharacter","getAllComics","getComic","getCharacterByName","ErrorBoundary","Component","constructor","state","componentDidCatch","errorInfo","console","log","this","setState","render","props","AppHeader","_Fragment","className","Link","to","NavLink","end","_ref","isActive","_ref2","Outlet","AbriviationText","text","quantityChar","slice","RandomCharBlock","imgStyle","href","target","rel","RandomChar","setChar","useEffect","updateChar","onCharLoaded","Math","floor","random","then","catch","err","errorMessage","spinner","randomCharBlock","onClick","mjolnir","CharList","charList","setCharList","selectedCharId","setSelectedCharId","setOffset","limitEnded","setLimitEnded","newCharLoading","setNewCharLoading","onShowNewCharacters","newCharList","onCharListLoaded","onChangeSelectedChar","domElementChar","onUpdateSelectedChar","focus","content","arr","item","clazzName","CSSTransition","timeout","classNames","e","onKeyDown","key","preventDefault","tabIndex","TransitionGroup","component","renderCharList","disabled","Skeleton","CharInfo","renderComics","index","comicId","resourceURI","replace","selectedChar","renderCharInfo","validate","errors","charName","VisitPage","foundChar","SearchChar","setFoundChar","Formik","initialValues","onSubmit","Form","Field","placeholder","ErrorMessageFormik","MainPage","setSelectedChar","decoration","ComicsList","comicsList","setComicsList","firstLoadEnded","setFirstLoadEnded","onLoadNewComics","newComicsList","comicsLoaded","comicsElement","renderComicsList","ComicsPage","View","SingleCharacter","charId","useParams","loadComic","charLoaded","SingleCharacterPage","Page404","lazy","SingleComicPage","App","Suspense","fallback","Router","Routes","Route","element","ReactDOM","document","getElementById"],"mappings":"oGAAe,UAA0B,kC,OCO1BA,IANMA,IAEbC,cAAA,OAAKC,MAAO,CAAEC,QAAS,QAASC,MAAO,QAASC,OAAQ,QAAQC,UAAW,UAAWC,OAAQ,UAAYC,IAAKC,EAAKC,IAAI,W,wCC6DjHC,IAhECA,IAERC,eAAA,OAAKC,MAAM,6BAA6BX,MAAO,CAACK,OAAQ,SAAUO,WAAY,OAAQX,QAAS,SAAUC,MAAM,QAAQC,OAAO,QAAQU,QAAQ,cAAcC,oBAAoB,WAAUC,SAAA,CACtLhB,cAAA,KAAGiB,UAAU,mBAAkBD,SAC/BhB,cAAA,KAAGiB,UAAU,YAAWD,SACxBL,eAAA,UAAQO,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,IAAGN,SAAA,CAC1DhB,cAAA,oBAAkBuB,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI7B,cAAA,WAASuB,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGrGzB,cAAA,KAAGiB,UAAU,iDAAgDD,SACjEhB,cAAA,KAAGiB,UAAU,aAAYD,SACzBL,eAAA,UAAQO,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAON,SAAA,CAC9DhB,cAAA,oBAAkBuB,cAAc,YAAYC,KAAK,QAAQC,MAAM,SAASC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eACjI7B,cAAA,WAASuB,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,kBAGrGzB,cAAA,KAAGiB,UAAU,mBAAkBD,SACnChB,cAAA,KAAGiB,UAAU,aAAYD,SACzBL,eAAA,UAAQO,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,OAAMN,SAAA,CAC7DhB,cAAA,oBAAkBuB,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI7B,cAAA,WAASuB,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGrGzB,cAAA,KAAGiB,UAAU,kDAAiDD,SAClEhB,cAAA,KAAGiB,UAAU,cAAaD,SAC1BL,eAAA,UAAQO,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAON,SAAA,CAC9DhB,cAAA,oBAAkBuB,cAAc,YAAYC,KAAK,QAAQC,MAAM,QAAQC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAChI7B,cAAA,WAASuB,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,iBAGrGzB,cAAA,KAAGiB,UAAU,kCAAiCD,SAClDhB,cAAA,KAAGiB,UAAU,cAAaD,SAC1BL,eAAA,UAAQO,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,MAAKN,SAAA,CAC5DhB,cAAA,oBAAkBuB,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI7B,cAAA,WAASuB,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGrGzB,cAAA,KAAGiB,UAAU,kDAAiDD,SAClEhB,cAAA,KAAGiB,UAAU,cAAaD,SAC1BL,eAAA,UAAQO,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAON,SAAA,CAC9DhB,cAAA,oBAAkBuB,cAAc,YAAYC,KAAK,QAAQC,MAAM,SAASC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eACjI7B,cAAA,WAASuB,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,kBAGrGzB,cAAA,KAAGiB,UAAU,kCAAiCD,SAClDhB,cAAA,KAAGiB,UAAU,cAAaD,SAC1BL,eAAA,UAAQO,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,OAAMN,SAAA,CAC7DhB,cAAA,oBAAkBuB,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI7B,cAAA,WAASuB,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGrGzB,cAAA,KAAGiB,UAAU,iDAAgDD,SACjEhB,cAAA,KAAGiB,UAAU,cAAaD,SAC1BL,eAAA,UAAQO,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAON,SAAA,CAC9DhB,cAAA,oBAAkBuB,cAAc,YAAYC,KAAK,QAAQC,MAAM,KAAKC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAC7H7B,cAAA,WAASuB,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,kB,wCCiBtGK,IAvEOA,KAClB,MAAMC,EAAW,4CACXC,EAAU,2CAMV,QAACC,EAAO,MAAEC,EAAK,QAAEC,GCRJC,MACnB,MAAOH,EAASI,GAAcC,oBAAS,IAChCJ,EAAOK,GAAYD,oBAAS,GAwBnC,MAAO,CAACL,UAASC,QAAOC,QAtBRK,uBAAYC,eAAMC,GAAsF,IAAjFC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,MAAOG,EAAIH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAMI,EAAOJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,eAAgB,oBAC3FL,EAAS,MACTF,GAAW,GAEX,IACI,MAAMY,QAAiBC,MAAMR,EAAK,CAACC,SAAQI,OAAMC,YAEjD,IAAKC,EAASE,GACV,MAAM,IAAIC,MAAM,mBAADC,OAAoBX,EAAG,cAAAW,OAAaJ,EAASK,SAGhE,MAAMC,QAAaN,EAASO,OAE5B,OADAnB,GAAW,GACJkB,EAET,MAAOrB,GAGL,MAFAG,GAAW,GACXE,EAASL,GACHA,KAEX,MDhB+BE,GAiB5BqB,EAAuBC,IAClB,CACHC,GAAID,EAAKC,GACTC,KAAMF,EAAKE,KACXC,YAAaH,EAAKG,YAClBC,UAAU,GAADT,OAAKK,EAAKI,UAAUC,KAAI,KAAAV,OAAIK,EAAKI,UAAUE,WACpDC,SAAUP,EAAKQ,KAAK,GAAGxB,IACvByB,KAAMT,EAAKQ,KAAK,GAAGxB,IACnB0B,OAAQV,EAAKU,OAAOC,QAcvBC,EAAoBF,IAAY,IAADG,EAChC,MAAO,CACHZ,GAAIS,EAAOT,GACXa,MAAOJ,EAAOI,MACdX,YAAaO,EAAOP,aAAe,iKACnCC,UAAU,GAADT,OAAKe,EAAON,UAAUC,KAAI,KAAAV,OAAIe,EAAON,UAAUE,WACxDS,UAA+B,QAArBF,EAAAH,EAAOM,YAAY,UAAE,IAAAH,OAAA,EAArBA,EAAuBE,WAAY,QAC7CE,MAAOP,EAAOQ,UAAS,GAAAvB,OAAMe,EAAOQ,UAAS,UAAW,iMACxDC,MAAOT,EAAOU,OAAO,GAAGD,MAAK,GAAAxB,OAAMe,EAAOU,OAAO,GAAGD,MAAK,KAAM,iHAC/DnC,IAAK0B,EAAOF,KAAK,GAAGxB,MAI5B,MAAO,CACHT,UACAC,QACA6C,iBAtDqBtC,iBAAiE,IAA1DuC,EAAKpC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GANZ,EAMiCqC,EAAMrC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GALtC,IAMtB,MAAMsC,QAAY/C,EAAQ,GAADkB,OAAItB,EAAQ,qBAAAsB,OAAoB2B,EAAK,YAAA3B,OAAW4B,EAAM,KAAA5B,OAAIrB,IACnF,OAAOkD,EAAI3B,KAAK4B,QAAQC,IAAI3B,IAqD5B4B,aAlDiB5C,UACjB,MAAMyC,QAAY/C,EAAQ,GAADkB,OAAItB,EAAQ,eAAAsB,OAAcM,EAAE,KAAAN,OAAIrB,IACzD,OAAOyB,EAAoByB,EAAI3B,KAAK4B,QAAQ,KAiD5CG,aA5BgB7C,iBAAyD,IAAlDwC,EAAMrC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GA/BX,EA+B6BoC,EAAKpC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAhCnC,EAiCjB,MAAMsC,QAAY/C,EAAQ,GAADkB,OAAItB,EAAQ,iBAAAsB,OAAgB2B,EAAK,YAAA3B,OAAW4B,EAAM,KAAA5B,OAAIrB,IAC/E,OAAOkD,EAAI3B,KAAK4B,QAAQC,KAAIhB,GAAUE,EAAiBF,MA2BvDmB,SAxBY9C,UACZ,MAAMyC,QAAY/C,EAAQ,GAADkB,OAAItB,EAAQ,WAAAsB,OAAUM,EAAE,KAAAN,OAAIrB,IACrD,OAAOsC,EAAiBY,EAAI3B,KAAK4B,QAAQ,KAuBzCK,mBAhDuB/C,UACvB,MAAMyC,QAAY/C,EAAQ,GAADkB,OAAItB,EAAQ,oBAAAsB,OAAmBO,EAAI,KAAAP,OAAIrB,IAChE,OAA+B,IAA5BkD,EAAI3B,KAAK4B,QAAQtC,QACbY,EAAoByB,EAAI3B,KAAK4B,QAAQ,Q,gCExBpD,yBAGA,MAAMM,UAAsBC,YAASC,cAAA,SAAA/C,WAAA,KACjCgD,MAAQ,CACJ1D,OAAO,GAGX2D,kBAAkB3D,EAAO4D,GACrBC,QAAQC,IAAI9D,EAAO4D,GACnBG,KAAKC,SAAS,CAAChE,OAAO,IAG1BiE,SACI,OAAGF,KAAKL,MAAM1D,MACHlC,cAACD,IAAY,IAGjBkG,KAAKG,MAAMpF,UAIXyE,O,oRCQAY,MA1BGA,IAGV1F,eAAA2F,WAAA,CAAAtF,SAAA,CACIL,eAAA,UAAQ4F,UAAU,cAAavF,SAAA,CAC3BhB,cAAA,MAAIuG,UAAU,aAAYvF,SACtBL,eAAC6F,IAAI,CAACC,GAAG,IAAGzF,SAAA,CACRhB,cAAA,QAAAgB,SAAM,WAAa,2BAG3BhB,cAAA,OAAKuG,UAAU,YAAWvF,SACtBL,eAAA,MAAAK,SAAA,CACIhB,cAAA,MAAAgB,SAAIhB,cAAC0G,IAAO,CAACD,GAAG,IAAIE,KAAG,EAAC1G,MAAO2G,IAAA,IAAC,SAACC,GAASD,EAAA,MAAM,CAAC,MAASC,EAAW,UAAY,YAAY7F,SAAC,iBAAyB,IAEvHhB,cAAA,MAAAgB,SAAIhB,cAAC0G,IAAO,CAACD,GAAG,UAAUxG,MAAO6G,IAAA,IAAC,SAACD,GAASC,EAAA,MAAM,CAAC,MAASD,EAAW,UAAY,YAAY7F,SAAC,qBAI5GhB,cAAA,QAAAgB,SACIhB,cAAC+G,IAAM,S,QCvBR,G,MAAA,IAA0B,qC,OCY1BC,MAZSA,CAACC,EAAMC,IACR,IAAhBD,EAAKpE,OACG,4TAGPoE,EAAKpE,OAASqE,EACPD,EAGJA,EAAKE,MAAM,EAAGD,EAAe,GAAK,M,cCA7C,MAoDME,EAAkBR,IAAa,IAAZ,KAAClD,GAAKkD,EAC3B,MAAM,KAAChD,EAAI,YAAEC,EAAW,UAAEC,EAAS,SAAEG,EAAQ,KAAEE,GAAQT,EACvD,IAAI2D,EAAW,CAAC,UAAc,SAK9B,MAJkB,wEAAdvD,IACAuD,EAAW,CAAC,UAAc,YAI1B1G,eAAA,OAAK4F,UAAU,oBAAmBvF,SAAA,CACtBhB,cAAA,OAAKO,IAAKuD,EAAWrD,IAAG,sEAAA4C,OAAiBO,GAAQ2C,UAAU,kBAAkBtG,MAAOoH,IACpF1G,eAAA,OAAK4F,UAAU,mBAAkBvF,SAAA,CAC7BhB,cAAA,KAAGuG,UAAU,mBAAkBvF,SAAE4C,IACjC5D,cAAA,KAAGuG,UAAU,oBAAmBvF,SAAE6C,IAClClD,eAAA,OAAK4F,UAAU,mBAAkBvF,SAAA,CAC7BhB,cAAA,KAAGsH,KAAMrD,EAAUsC,UAAU,sBAAsBgB,OAAO,SAASC,IAAI,aAAYxG,SAC/EhB,cAAA,OAAKuG,UAAU,QAAOvF,SAAC,eAE3BhB,cAAA,KAAGsH,KAAMnD,EAAMoC,UAAU,2BAA2BgB,OAAO,SAASC,IAAI,aAAYxG,SAChFhB,cAAA,OAAKuG,UAAU,QAAOvF,SAAC,qBAOxCyG,MA7EIA,KACf,MAAO/D,EAAMgE,GAAWpF,mBAAS,KAC3B,QAACL,EAAO,MAAEC,EAAK,aAAEmD,GAAgBvD,cAGvC6F,qBAAU,KACNC,MAGD,IAEH,MAAMC,EAAgBnE,IAClBgE,EAAQ,IAAIhE,EAAMG,YAAamD,EAAgBtD,EAAKG,YAAa,QAG/D+D,EAAaA,KACf,MAAMjE,EAAKmE,KAAKC,MAAmB,IAAbD,KAAKE,SAAiC,QAE5D3C,EAAa1B,GACRsE,KAAKJ,GACLK,OAAMC,GAAOpC,QAAQC,IAAImC,MAG5BC,EAAelG,EAAQlC,cAACD,IAAY,IAAK,KACzCsI,EAAUpG,EAAUjC,cAACU,IAAO,IAAK,KACjC4H,EAAoBpG,GAASD,EAA4C,KAAjCjC,cAACoH,EAAe,CAAC1D,KAAMA,IAErE,OACI/C,eAAA,OAAK4F,UAAU,aAAYvF,SAAA,CACtBqH,EACAD,EACAE,EACD3H,eAAA,OAAK4F,UAAU,qBAAoBvF,SAAA,CAC/BL,eAAA,KAAG4F,UAAU,oBAAmBvF,SAAA,CAAC,8BACFhB,cAAA,SAAK,4CAGpCA,cAAA,KAAGuG,UAAU,oBAAmBvF,SAAC,0BAGjChB,cAAA,UACAuG,UAAU,sBACVgC,QAASX,EAAW5G,SAChBhB,cAAA,OAAKuG,UAAU,QAAOvF,SAAC,aAE3BhB,cAAA,OAAKO,IAAKiI,EAAS/H,IAAI,UAAU8F,UAAU,kC,sBC8D5CkC,MA1GGrC,IAEd,MAAOsC,EAAUC,GAAerG,mBAAS,KAClCsG,EAAgBC,GAAqBvG,mBAAS,OAC9C2C,EAAQ6D,GAAaxG,mBAAS,MAC9ByG,EAAYC,GAAiB1G,oBAAS,IACtC2G,EAAgBC,GAAqB5G,oBAAS,IAE/C,QAACL,EAAO,MAAEC,EAAK,iBAAE6C,GAAoBjD,cAcrCqH,EAAsBA,KACxBpE,EAAiB,EAAGE,GACfgD,MAAKS,GAdYU,KACtB,IAAIL,GAAa,EACb,KAAO9D,GAAU,IACjB8D,GAAa,GAGjBJ,GAAYD,GAAY,IAAIA,KAAaU,KACzCN,GAAU7D,GAAUA,EAAS,IAC7B+D,EAAcD,GACdG,GAAkB,IAKIG,CAAiBX,KAClCR,OAAMC,GAAOpC,QAAQC,IAAImC,MAG5BmB,EAAuBA,CAAC5F,EAAM6F,KAChCnD,EAAMoD,qBAAqB9F,GAC3BmF,EAAkBnF,EAAKC,IACvB4F,EAAeE,SAGnB9B,qBAAU,KACNwB,MAGD,IAEH,MAyCMd,EAAUpG,IAAYgH,EAAiBjJ,cAACU,IAAO,IAAK,KACpD0H,EAAelG,EAAQlC,cAACD,IAAY,IAAK,KACzC2J,EA3CkBC,KACpB,MAAMjB,EAAWiB,EAAIvE,KAAIwE,IACrB,IAAIvC,EAAW,CAAC,UAAc,SAC9B,MAAMwC,EAAYjB,IAAmBgB,EAAKjG,GAAK,iCAAmC,aAMlF,MAJsB,wEAAnBiG,EAAK9F,YACJuD,EAAW,CAAC,UAAc,UAI1BrH,cAAC8J,IAAa,CACVC,QAAS,IAETC,WAAW,aAAYhJ,SACvBL,eAAA,MAAI4F,UAAWsD,EACXtB,QAAU0B,IACNX,EAAqBM,EAAMK,EAAE1C,SAEjC2C,UAAYD,IACM,UAAVA,EAAEE,KAA6B,MAAVF,EAAEE,MACvBF,EAAEG,iBACFd,EAAqBM,EAAMK,EAAE1C,UAGrC8C,SAAU,EAAErJ,SAAA,CACZhB,cAAA,OAAKO,IAAKqJ,EAAK9F,UAAWrD,IAAKmJ,EAAKhG,KAAM3D,MAAOoH,IACjDrH,cAAA,OAAKuG,UAAU,aAAYvF,SAAE4I,EAAKhG,WAdjCgG,EAAKjG,OAoBtB,OACI3D,cAAA,MAAIuG,UAAU,aAAYvF,SACtBhB,cAACsK,IAAe,CAACC,UAAW,KAAKvJ,SAC5B0H,OAQD8B,CAAe9B,GAE/B,OACI/H,eAAA,OAAK4F,UAAU,aAAYvF,SAAA,CACtBqH,EACAD,EACAsB,EACD1J,cAAA,UACAuG,UAAU,mCACVgC,QAAS0B,GAAKd,IACdlJ,MAAO,CAAC,QAAW8I,EAAa,OAAS,SACzC0B,SAAUxI,EAAQjB,SACdhB,cAAA,OAAKuG,UAAU,QAAOvF,SAAC,oB,MCtFxB0J,MAjBEA,IAET/J,eAAA2F,WAAA,CAAAtF,SAAA,CACIhB,cAAA,KAAGuG,UAAU,eAAcvF,SAAC,iDAC5BL,eAAA,OAAK4F,UAAU,WAAUvF,SAAA,CACrBL,eAAA,OAAK4F,UAAU,yBAAwBvF,SAAA,CACnChB,cAAA,OAAKuG,UAAU,2BACfvG,cAAA,OAAKuG,UAAU,4BAEnBvG,cAAA,OAAKuG,UAAU,0BACfvG,cAAA,OAAKuG,UAAU,0BACfvG,cAAA,OAAKuG,UAAU,gC,MCiEhBoE,MAxEGvE,IAEd,MA8BMwE,EAAgBxG,GAEdzD,eAAA2F,WAAA,CAAAtF,SAAA,CACIhB,cAAA,OAAKuG,UAAU,eAAcvF,SAAC,YAEX,IAAlBoD,EAAOvB,OAAe7C,cAAA,OAAAgB,SAAK,qKAAuC,KAEnEhB,cAAA,MAAIuG,UAAU,oBAAmBvF,SAEzBoD,EAAOgB,KAAI,CAACwE,EAAMiB,KACd,GAAIA,EAAQ,EAAG,OAAO,KAEtB,MAAMC,EAAUlB,EAAKmB,YAAYC,QAAQ,8CAA+C,IACxF,OACIhL,cAACwG,IAAI,CAACD,UAAU,oBAAoBE,GAAE,WAAApD,OAAayH,GAAU9J,SACxD4I,EAAKhG,MADyDiH,YAWzF,aAACI,GAAgB7E,EACjBsD,EAAUuB,EAxDQA,KACpB,MAAM,KAACrH,EAAI,YAAEC,EAAW,UAAEC,EAAS,SAAEG,EAAQ,KAAEE,EAAI,OAAEC,GAAU6G,EACzD5D,EAAyB,wEAAdvD,EAAsF,CAAC,UAAa,SAAW,CAAC,UAAa,SAE9I,OACInD,eAAA2F,WAAA,CAAAtF,SAAA,CACIL,eAAA,OAAK4F,UAAU,eAAcvF,SAAA,CACzBhB,cAAA,OAAKO,IAAKuD,EACVrD,IAAKmD,EACL3D,MAAOoH,IACP1G,eAAA,OAAAK,SAAA,CACIhB,cAAA,OAAKuG,UAAU,kBAAiBvF,SAAE4C,IAClCjD,eAAA,OAAK4F,UAAU,aAAYvF,SAAA,CACvBhB,cAAA,KAAGsH,KAAMrD,EAAUsC,UAAU,sBAAqBvF,SAC9ChB,cAAA,OAAKuG,UAAU,QAAOvF,SAAC,eAE3BhB,cAAA,KAAGsH,KAAMnD,EAAMoC,UAAU,2BAA0BvF,SAC/ChB,cAAA,OAAKuG,UAAU,QAAOvF,SAAC,oBAKvChB,cAAA,OAAKuG,UAAU,cAAavF,SACvB6C,IAEJ+G,EAAaxG,OA+BK8G,CAAeD,GAAgBjL,cAAC0K,EAAQ,IAEvE,OACI1K,cAAA,OAAKuG,UAAU,aAAYvF,SACtB0I,K,gBC5Db,MAAMyB,EAAYzJ,IACd,MAAM0J,EAAS,GAIf,OAFI1J,EAAO2J,WAAUD,EAAOC,SAAW,0BAEhCD,GA+CLE,EAAYxE,IAAoB,IAAnB,UAAEyE,GAAWzE,EAE5B,OACI9G,cAAA,OAAKuG,UAAU,4BAA2BvF,SACrCuK,EACD5K,eAAA2F,WAAA,CAAAtF,SAAA,CACIL,eAAA,KAAG4F,UAAU,sBAAqBvF,SAAA,CAAC,mBAAiBuK,EAAU3H,KAAK,YACnE5D,cAACwG,IAAI,CAACC,GAAE,SAAApD,OAAWkI,EAAU5H,IAAM4C,UAAU,mDAAkDvF,SAAChB,cAAA,OAAKuG,UAAU,QAAOvF,SAAC,iBAG3HhB,cAAA,KAAGuG,UAAU,gDAA+CvF,SAAC,iEAK1DwK,MA3DIA,KACf,MAAOD,EAAWE,GAAgBnJ,mBAAS,OACrC,mBAAEkD,EAAkB,QAAEvD,EAAO,MAAEC,GAAUJ,cAU/C,OACInB,eAAA,OAAK4F,UAAU,aAAYvF,SAAA,CACvBhB,cAAA,MAAIuG,UAAU,oBAAmBvF,SAAC,iCAClChB,cAAC0L,IAAM,CACHC,cAAe,CAAEN,SAAU,IAC3BF,SAAUA,EACVS,SAAUhF,IAAA,IAAC,SAACyE,GAASzE,EAb7BpB,EAa6C6F,GAZxCpD,MAAKvE,IACK+H,EAAP/H,IAAyC,MAE5CwE,OAAMC,GAAOpC,QAAQC,IAAImC,MASyBnH,SAE/CL,eAACkL,IAAI,CAAA7K,SAAA,CACDL,eAAA,OAAK4F,UAAU,6BAA4BvF,SAAA,CACvChB,cAAC8L,IAAK,CACFvF,UAAU,oBACV3C,KAAK,WACLmI,YAAY,kEAEhB/L,cAAA,UAAQuG,UAAU,6CAA6C/E,KAAK,SAASiJ,SAAUxI,EAAQjB,SAAChB,cAAA,OAAKuG,UAAU,QAAOvF,SAAC,cAG3HhB,cAAA,OAAKuG,UAAU,4BAA2BvF,SACtChB,cAACgM,IAAkB,CAACpI,KAAK,WAAW2G,UAAU,MAAMhE,UAAU,yDAM5D,MAAbgF,GAAsBrJ,EAA6C,KAArClC,cAACsL,EAAS,CAACC,UAAWA,IACpDrJ,EAAQlC,cAACD,IAAY,IAAM,SCtDzB,MAA0B,mCC2C1BkM,MAhCEA,KAEb,MAAOhB,EAAciB,GAAmB5J,mBAAS,MAMjD,OACI3B,eAAA2F,WAAA,CAAAtF,SAAA,CACIhB,cAACyF,IAAa,CAAAzE,SACVhB,cAACyH,EAAU,MAGf9G,eAAA,OAAK4F,UAAU,gBAAevF,SAAA,CAC1BhB,cAACyF,IAAa,CAAAzE,SACVhB,cAACyI,EAAQ,CAACe,qBAZI9F,IAC1BwI,EAAgBxI,QAaR1D,cAACyF,IAAa,CAAAzE,SACVL,eAAA,OAAK4F,UAAU,aAAYvF,SAAA,CACvBhB,cAAC2K,EAAQ,CAACM,aAAcA,IACxBjL,cAACwL,EAAU,YAKvBxL,cAAA,OAAKuG,UAAU,gBAAgBhG,IAAK4L,EAAY1L,IAAI,e,MC6CjD2L,MAxEIA,KACf,MAAOC,EAAYC,GAAiBhK,mBAAS,KACtC2C,EAAQ6D,GAAaxG,mBAAS,IAC9ByG,EAAYC,GAAiB1G,oBAAS,IACtCiK,EAAgBC,GAAqBlK,oBAAS,IAE/C,aAACgD,EAAY,QAAErD,EAAO,MAAEC,GAASJ,cAEvC6F,qBAAU,KACN8E,MAGD,IAEH,MAUMA,EAAkBA,KACpBnH,EAAaL,GACRgD,MAAKyE,GAZQA,KACdzH,GAAU,OACV+D,GAAc,GAGlBsD,GAAcD,GAAc,IAAIA,KAAeK,KAC/C5D,GAAU7D,GAAUA,EAAS,IAC7BuH,GAAkB,IAKSG,CAAaD,KACnCxE,OAAMC,GAAOpC,QAAQC,IAAImC,MAyB5BuB,EAtBoBtF,KACtB,MAAMwI,EAAgBxI,EAAOgB,KAAI,CAACwE,EAAMiB,KACpC,MAAMhG,EAAuB,IAAf+E,EAAK/E,MAAc,gBAAe,GAAAxB,OAAMuG,EAAK/E,MAAK,KAEhE,OACI7E,cAAA,MAAIuG,UAAU,eAAcvF,SACxBL,eAAC6F,IAAI,CAACC,GAAE,GAAApD,OAAKuG,EAAKjG,IAAK3C,SAAA,CACnBhB,cAAA,OAAKO,IAAKqJ,EAAK9F,UAAWrD,IAAKmJ,EAAKpF,MAAO+B,UAAU,qBACrDvG,cAAA,OAAKuG,UAAU,oBAAmBvF,SAAE4I,EAAKpF,QACzCxE,cAAA,OAAKuG,UAAU,qBAAoBvF,SAAE6D,QAJXgG,MAU1C,OACI7K,cAAA,MAAIuG,UAAU,eAAcvF,SACvB4L,KAKGC,CAAiBR,GAC3BhE,EAAUpG,IAAYsK,EAAiBvM,cAACU,IAAO,IAAK,KACpD0H,EAAelG,EAAQlC,cAACD,IAAY,IAAK,KAE/C,OACIY,eAAA,OAAK4F,UAAU,eAAcvF,SAAA,CACxBqH,EACAD,EACAsB,EACD1J,cAAA,UACAuG,UAAU,mCACVgC,QAASkE,EACTxM,MAAO,CAAC,QAAW8I,EAAa,OAAS,SACzC0B,SAAUxI,EAAQjB,SACdhB,cAAA,OAAKuG,UAAU,QAAOvF,SAAC,oBCjExB8L,MARIA,IAEX9M,cAACyF,IAAa,CAAAzE,SACVhB,cAACoM,EAAU,M,MCIvB,MAoCMW,EAAOnG,IAAa,IAAZ,KAAClD,GAAKkD,EAChB,MAAM,UAAC9C,EAAS,MAAEU,EAAK,YAAEX,GAAeH,EAExC,OACI/C,eAAA,OAAK4F,UAAU,eAAcvF,SAAA,CACzBhB,cAAA,OAAKO,IAAKuD,EAAWrD,IAAK+D,EAAO+B,UAAU,sBAC3C5F,eAAA,OAAK4F,UAAU,qBAAoBvF,SAAA,CAC/BhB,cAAA,MAAIuG,UAAU,qBAAoBvF,SAAEwD,IACpCxE,cAAA,KAAGuG,UAAU,sBAAqBvF,SAAE6C,EAAYhB,OAAS,EAAIgB,EAAc,+HAO5EmJ,MAnDSA,KAEpB,MAAOtJ,EAAMgE,GAAWpF,mBAAS,OAE3B,OAAC2K,GAAUC,eACX,aAAC7H,EAAY,QAAEpD,EAAO,MAAEC,GAASJ,cAEvC6F,qBAAU,KACNwF,EAAUF,KAEX,CAACA,IAEJ,MAAMG,EAAc1J,IACZgE,EAAQhE,IAGVyJ,EAAaxJ,IACf0B,EAAa1B,GACJsE,KAAKmF,GACLlF,OAAMC,GAAOpC,QAAQC,IAAImC,MAGhCC,EAAelG,EAAQlC,cAACD,IAAY,IAAK,KACzCsI,EAAUpG,EAAUjC,cAACU,IAAO,IAAK,KACjCgJ,EAAUxH,GAASD,IAAYyB,EAAO,KAAO1D,cAAC+M,EAAI,CAACrJ,KAAMA,IAG/D,OACI/C,eAAA2F,WAAA,CAAAtF,SAAA,CACKoH,EACAC,EACAqB,MC9BE2D,MARaA,IAEpBrN,cAACyF,IAAa,CAAAzE,SACVhB,cAACgN,EAAe,MCG5B,MAAMM,EAAUC,gBAAK,IAAM,+BACrBC,EAAkBD,gBAAK,IAAM,+BA6BpBE,MA1BHA,IAGJzN,cAAC0N,WAAQ,CAACC,SAAU3N,cAACU,IAAO,IAAIM,SAC5BhB,cAAC4N,IAAM,CAAA5M,SACHhB,cAAA,OAAKuG,UAAU,MAAKvF,SACZhB,cAAC6N,IAAM,CAAA7M,SACHL,eAACmN,IAAK,CAAC/J,KAAK,IAAIgK,QAAS/N,cAACqG,EAAS,IAAGrF,SAAA,CAClChB,cAAC8N,IAAK,CAACjD,OAAK,EAACkD,QAAS/N,cAACiM,EAAQ,MAC/BtL,eAACmN,IAAK,CAAC/J,KAAK,UAAS/C,SAAA,CACjBhB,cAAC8N,IAAK,CAACjD,OAAK,EAACkD,QAAS/N,cAAC8M,EAAU,MACjC9M,cAAC8N,IAAK,CAAC/J,KAAK,WAAWgK,QAAS/N,cAACwN,EAAe,SAEpD7M,eAACmN,IAAK,CAAC/J,KAAK,QAAO/C,SAAA,CACfhB,cAAC8N,IAAK,CAACjD,OAAK,EAACkD,QAAS/N,cAACiM,EAAQ,MAC/BjM,cAAC8N,IAAK,CAAC/J,KAAK,UAAUgK,QAAS/N,cAACqN,EAAmB,SAEvDrN,cAAC8N,IAAK,CAAC/J,KAAK,IAAIgK,QAAS/N,cAACsN,EAAO,iB,MCzBjEU,IAAS7H,OACLnG,cAACyN,EAAG,IAAKQ,SAASC,eAAe,W","file":"static/js/main.2b1836c6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst MarvelService = () => {\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=95c456a7ea2c5345495bb580c088c93e';\r\n    const _limitCharacters = 9;\r\n    const _offsetCharacters = 210;\r\n    const _limitComics = 8;\r\n    const _offsetComics = 0;\r\n\r\n    const {loading, error, request} = useHttp();\r\n    const getAllCharacters = async (limit = _limitCharacters, offset = _offsetCharacters) => {\r\n        const res = await request(`${_apiBase}characters?limit=${limit}&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n        if(res.data.results.length === 0) return false;\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description,\r\n            thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n   const getAllComics = async (offset = _offsetComics, limit = _limitComics) => {\r\n        const res = await request(`${_apiBase}comics?limit=${limit}&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(comics => _transformComics(comics));\r\n   }\r\n\r\n   const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n   }\r\n\r\n   const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            description: comics.description || 'Описание комикса отсутствует',\r\n            thumbnail: `${comics.thumbnail.path}.${comics.thumbnail.extension}`,\r\n            language: comics.textObjects[0]?.language || 'en-us',\r\n            pages: comics.pageCount ? `${comics.pageCount} pages` : 'Нет информации о количестве страниц',\r\n            price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'Стоимость не указана',\r\n            url: comics.urls[0].url\r\n        }\r\n   }\r\n\r\n    return {\r\n        loading,\r\n        error,\r\n        getAllCharacters,\r\n        getCharacter,\r\n        getAllComics,\r\n        getComic,\r\n        getCharacterByName\r\n    }\r\n}\r\n\r\nexport default MarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\r\n    const request = useCallback(async(url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n        setError(null);\r\n        setLoading(true);\r\n        \r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n            \r\n            const data = await response.json();\r\n            setLoading(false);\r\n            return data;\r\n    \r\n        } catch (error) {\r\n            setLoading(false);\r\n            setError(error);\r\n            throw error;\r\n        }\r\n    }, []);\r\n\r\n    return {loading, error, request}\r\n}","import { Component } from \"react\";\r\nimport ErrorMessage from '../errorMessage/ErrorMessage'\r\n\r\nclass ErrorBoundary extends Component{\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo){\r\n        console.log(error, errorInfo);\r\n        this.setState({error: true});\r\n    }\r\n\r\n    render(){\r\n        if(this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import {Link, NavLink, Outlet} from 'react-router-dom';\n\nimport './appHeader.scss';\n\nconst AppHeader = () => {\n\n    return (\n        <>\n            <header className=\"app__header\">\n                <h1 className=\"app__title\">\n                    <Link to=\"/\">\n                        <span>Marvel</span> information portal\n                    </Link>\n                </h1>\n                <nav className=\"app__menu\">\n                    <ul>\n                        <li><NavLink to=\"/\" end style={({isActive}) => ({'color': isActive ? '#9f0013' : 'inherit'})}>Characters</NavLink></li>\n                        /\n                        <li><NavLink to=\"/comics\" style={({isActive}) => ({'color': isActive ? '#9f0013' : 'inherit'})}>Comics</NavLink></li>\n                    </ul>\n                </nav>\n            </header>\n            <main>\n                <Outlet />\n            </main>\n        </>\n        \n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","const AbriviationText = (text, quantityChar) => {\r\n    if(text.length === 0) {\r\n        return 'К сожалению, мы ещё не написали описание для этого персонажа :)'\r\n    }\r\n\r\n    if (text.length < quantityChar) {\r\n        return text;\r\n    };\r\n\r\n    return text.slice(0, quantityChar - 3) + '...';\r\n}\r\n\r\nexport default AbriviationText;","import './randomChar.scss';\nimport { useState, useEffect } from 'react';\n\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport MarvelService from '../../services/MarvelService';\nimport AbriviationText from '../../services/AbreviationText';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nconst RandomChar = () => {\n    const [char, setChar] = useState({});\n    const {loading, error, getCharacter} = MarvelService();\n          \n\n    useEffect(() => {\n        updateChar();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const onCharLoaded = (char) => {\n        setChar({...char, description: AbriviationText(char.description, 230)});\n    }\n\n    const updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        \n        getCharacter(id)\n            .then(onCharLoaded)\n            .catch(err => console.log(err))\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const randomCharBlock = !(error || loading) ? <RandomCharBlock char={char}/> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {spinner}\n            {errorMessage}\n            {randomCharBlock}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button \n                className=\"button button__main\"\n                onClick={updateChar}>\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n    \n}\n\nconst RandomCharBlock = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n                    <img src={thumbnail} alt={`Изображение ${name}`} className=\"randomchar__img\" style={imgStyle}/>\n                    <div className=\"randomchar__info\">\n                        <p className=\"randomchar__name\">{name}</p>\n                        <p className=\"randomchar__descr\">{description}</p>\n                        <div className=\"randomchar__btns\">\n                            <a href={homepage} className=\"button button__main\" target=\"_blank\" rel=\"noreferrer\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\" target=\"_blank\" rel=\"noreferrer\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n    )\n}\nexport default RandomChar;","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport MarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\n\nimport './charList.scss';\n\nconst CharList = (props) => {\n    \n    const [charList, setCharList] = useState([]),\n          [selectedCharId, setSelectedCharId] = useState(null),\n          [offset, setOffset] = useState(210),\n          [limitEnded, setLimitEnded] = useState(false),\n          [newCharLoading, setNewCharLoading] = useState(false);\n\n    const {loading, error, getAllCharacters} = MarvelService();\n\n    const onCharListLoaded = (newCharList) => {\n        let limitEnded = false;\n        if (1564 - offset <= 9) {\n            limitEnded = true;\n        }\n\n        setCharList(charList => [...charList, ...newCharList]);\n        setOffset(offset => offset + 9);\n        setLimitEnded(limitEnded);\n        setNewCharLoading(true);\n    }\n\n    const onShowNewCharacters = () => {\n        getAllCharacters(9, offset)\n            .then(charList => onCharListLoaded(charList))\n            .catch(err => console.log(err))\n    }\n\n    const onChangeSelectedChar = (char, domElementChar) => {\n        props.onUpdateSelectedChar(char);\n        setSelectedCharId(char.id);\n        domElementChar.focus();\n    }\n\n    useEffect(() => {\n        onShowNewCharacters();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const renderCharList = (arr) => {\n        const charList = arr.map(item => {\n            let imgStyle = {\"objectFit\" : \"cover\"};\n            const clazzName = selectedCharId === item.id ? 'char__item char__item_selected' : 'char__item';\n\n            if(item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {\"objectFit\" : \"unset\"}\n            }\n\n            return (\n                <CSSTransition \n                    timeout={300}\n                    key={item.id}\n                    classNames=\"char__item\">\n                    <li className={clazzName}\n                        onClick={(e) => {\n                            onChangeSelectedChar(item, e.target)\n                        }}\n                        onKeyDown={(e) => {\n                            if (e.key === 'Enter' || e.key === ' ') {\n                                e.preventDefault();\n                                onChangeSelectedChar(item, e.target)\n                            }\n                        }}\n                        tabIndex={0}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                    </li>\n                </CSSTransition>\n            )\n        })\n        \n        return (\n            <ul className=\"char__grid\">\n                <TransitionGroup component={null}>\n                    {charList}\n                </TransitionGroup>\n            </ul>\n        )\n    }\n    \n    const spinner = loading && !newCharLoading ? <Spinner/> : null;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const content = renderCharList(charList)\n\n    return (\n        <div className=\"char__list\">\n            {spinner}\n            {errorMessage}\n            {content}\n            <button \n            className=\"button button__main button__long\"\n            onClick={e => onShowNewCharacters()}\n            style={{'display': limitEnded ? 'none' : 'block'}}\n            disabled={loading}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n    \n}\n\nCharList.propTypes = {\n    onUpdateSelectedChar: PropTypes.func\n}\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport Skeleton from '../skeleton/Skeleton'\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\n    const renderCharInfo = (selectedChar) => {\n        const {name, description, thumbnail, homepage, wiki, comics} = selectedChar;\n        const imgStyle = thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ? {\"objectFit\": \"unset\"} : {\"objectFit\": \"cover\"};\n\n        return(\n            <>\n                <div className=\"char__basics\">\n                    <img src={thumbnail} \n                    alt={name}\n                    style={imgStyle}/>\n                    <div>\n                        <div className=\"char__info-name\">{name}</div>\n                        <div className=\"char__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"char__descr\">\n                    {description}\n                </div>\n                {renderComics(comics)}\n            </>    \n        )\n    }\n    \n    const renderComics = (comics) => {\n        return (\n            <>\n                <div className=\"char__comics\">Comics:</div>\n\n                {comics.length === 0 ? <div>Комиксов с этим персонажем нет</div> : null}\n\n                <ul className=\"char__comics-list\">\n                    {\n                        comics.map((item, index) => {\n                            if (index > 8) return null;\n    \n                            const comicId = item.resourceURI.replace('http://gateway.marvel.com/v1/public/comics/', '');\n                            return (\n                                <Link className=\"char__comics-item\" to={`/comics/${comicId}`} key={index}>\n                                    {item.name}             \n                                </Link>\n                            )\n                        })\n                    }\n                </ul>\n            </>\n        )\n    }\n\n    const {selectedChar} = props;\n    const content = selectedChar ? renderCharInfo(selectedChar) : <Skeleton/>\n\n    return (\n        <div className=\"char__info\">\n            {content}\n        </div>\n    )\n    \n}\n\nCharInfo.propTypes = {\n    selectedChar: PropTypes.object\n}\n\nexport default CharInfo;","import './searchChar.scss';\r\n\r\nimport { Formik, Form, Field, ErrorMessage as ErrorMessageFormik } from 'formik';\r\nimport { Link } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport MarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nconst validate = (values) => {\r\n    const errors = {};\r\n\r\n    if(!values.charName) errors.charName = \"This field is required\";\r\n\r\n    return errors;\r\n}\r\n\r\nconst SearchChar = () => {\r\n    const [foundChar, setFoundChar] = useState(null);\r\n    const { getCharacterByName, loading, error } = MarvelService();\r\n\r\n    const searchChar = (name) => {\r\n        getCharacterByName(name)\r\n            .then(char => {\r\n                char ? setFoundChar(char) : setFoundChar(false);\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return(\r\n        <div className=\"searchChar\">\r\n            <h2 className=\"searchChar__title\">Or find a character by name:</h2>\r\n            <Formik\r\n                initialValues={{ charName: '' }}\r\n                validate={validate}\r\n                onSubmit={({charName}) => searchChar(charName)}\r\n            >\r\n                <Form>\r\n                    <div className=\"searchChar__search-wrapper\">\r\n                        <Field \r\n                            className=\"searchChar__input\"\r\n                            name=\"charName\"\r\n                            placeholder=\"Введите имя\"\r\n                         />\r\n                        <button className=\"searchChar__btn-search button button__main\" type=\"submit\" disabled={loading}><div className=\"inner\">FIND</div></button>\r\n                    </div>\r\n                    \r\n                    <div className='searchChar__message-block'>\r\n                        <ErrorMessageFormik name=\"charName\" component=\"div\" className=\"searchChar__message searchChar__message_error\"/>\r\n                    </div>\r\n                    \r\n                </Form>\r\n                \r\n            </Formik>\r\n            {foundChar != null && !error ? <VisitPage foundChar={foundChar}/> : null}\r\n            {error ? <ErrorMessage /> : null}\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nconst VisitPage = ({ foundChar }) => {\r\n \r\n    return (\r\n        <div className=\"searchChar__message-block\">    \r\n            {foundChar ?\r\n            <>\r\n                <p className=\"searchChar__message\">There is! Visit {foundChar.name} page?</p>\r\n                <Link to={`/char/${foundChar.id}`} className=\"searchChar__message-btn button button__secondary\"><div className=\"inner\">TO PAGE</div></Link>\r\n            </> \r\n            :\r\n            <p className=\"searchChar__message searchChar__message_error\">The character was not found. Check the name and try again</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchChar;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","\r\nimport { useState } from \"react\";\r\n\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport SearchChar from \"../searchChar/SearchChar\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n\r\n    const [selectedChar, setSelectedChar] = useState(null);\r\n\r\n    const onUpdateSelectedChar = (char) => {\r\n        setSelectedChar(char);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar/>\r\n            </ErrorBoundary>\r\n                                \r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onUpdateSelectedChar={onUpdateSelectedChar}/>\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <div className=\"char-block\">\r\n                        <CharInfo selectedChar={selectedChar}/>\r\n                        <SearchChar />\r\n                    </div>\r\n                </ErrorBoundary>\r\n            </div>\r\n\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default MainPage;","import {useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\n\nimport './comicsList.scss';\n\n\nconst ComicsList = () => {\n    const [comicsList, setComicsList] = useState([]);\n    const [offset, setOffset] = useState(0);\n    const [limitEnded, setLimitEnded] = useState(false);\n    const [firstLoadEnded, setFirstLoadEnded] = useState(false);\n\n    const {getAllComics, loading, error} = MarvelService();\n\n    useEffect(() => {\n        onLoadNewComics();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const comicsLoaded = (newComicsList) => {\n        if (offset >= 59339 - 8) {\n            setLimitEnded(true)\n        }\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setOffset(offset => offset + 8);\n        setFirstLoadEnded(true);\n    }\n\n    const onLoadNewComics = () => {\n        getAllComics(offset)\n            .then(newComicsList => comicsLoaded(newComicsList))\n            .catch(err => console.log(err))\n    }\n\n    const renderComicsList = (comics) => {\n        const comicsElement = comics.map((item, index) => {\n            const price = item.price === 0 ? 'NOT AVAILABLE' : `${item.price}$`;\n\n            return (\n                <li className=\"comics__item\" key={index}>\n                    <Link to={`${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{price}</div>\n                    </Link>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {comicsElement}\n            </ul>\n        )\n    }\n\n    const content = renderComicsList(comicsList);\n    const spinner = loading && !firstLoadEnded ? <Spinner/> : null;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    \n    return (\n        <div className=\"comics__list\">\n            {spinner}\n            {errorMessage}\n            {content}\n            <button \n            className=\"button button__main button__long\" \n            onClick={onLoadNewComics}\n            style={{'display': limitEnded ? 'none' : 'block'}}\n            disabled={loading}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import ComicsList from '../comicsList/ComicsList';\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <ErrorBoundary>\r\n            <ComicsList/>\r\n        </ErrorBoundary>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './singleCharacter.scss';\n\n\nconst SingleCharacter = () => {\n\n    const [char, setChar] = useState(null);\n\n    const {charId} = useParams();\n    const {getCharacter, loading, error} = MarvelService();\n\n    useEffect(() => {\n        loadComic(charId);\n        // eslint-disable-next-line\n    }, [charId])\n\n    const charLoaded = (char) => {\n            setChar(char);\n    }\n\n    const loadComic = (id) => {\n        getCharacter(id)\n                .then(charLoaded)\n                .catch(err => console.log(err));\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = error || loading || !char ? null : <View char={char}/>\n\n\n    return (\n        <>\n            {errorMessage}\n            {spinner}\n            {content}\n        </>\n    )\n}\n\nconst View = ({char}) => {\n    const {thumbnail, title, description} = char;\n\n    return (\n        <div className=\"single-comic\">\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\n            <div className=\"single-comic__info\">\n                <h2 className=\"single-comic__name\">{title}</h2>\n                <p className=\"single-comic__descr\">{description.length > 0 ? description : 'Описание отсутствует'}</p>\n            </div>\n        </div>\n    )\n}\n\n\nexport default SingleCharacter;","import SingleCharacter from '../singleCharacter/SingleCharacter'\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nconst SingleCharacterPage = () => {\r\n    return (\r\n        <ErrorBoundary>\r\n            <SingleCharacter />\r\n        </ErrorBoundary>\r\n    )\r\n}\r\n\r\nexport default SingleCharacterPage;","import { BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\nimport { Suspense, lazy} from \"react\";\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport MainPage from \"../pages/MainPage\";\nimport ComicsPage from \"../pages/ComicsPage\";\nimport SingleCharacterPage from \"../pages/SingleCharacterPage.js\";\nimport Spinner from \"../spinner/Spinner.js\";\n\nconst Page404 = lazy(() => import('../pages/Page404.js'));\nconst SingleComicPage = lazy(() => import(\"../pages/SingleComicPage\"));\n\n\nconst App = () => {\n    \n    return (\n        <Suspense fallback={<Spinner />}>\n            <Router>\n                <div className=\"app\">\n                        <Routes>\n                            <Route path='/' element={<AppHeader/>}>\n                                <Route index element={<MainPage />} />\n                                <Route path='/comics'>\n                                    <Route index element={<ComicsPage />} />\n                                    <Route path=':comicId' element={<SingleComicPage />} />\n                                </Route>\n                                <Route path='/char'>\n                                    <Route index element={<MainPage />} />\n                                    <Route path=':charId' element={<SingleCharacterPage />} />\n                                </Route>\n                                <Route path='*' element={<Page404 />} />\n                            </Route>\n                        </Routes>\n                </div>\n            </Router>\n        </Suspense>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n    <App />, document.getElementById('root')\n);\n\n"],"sourceRoot":""}