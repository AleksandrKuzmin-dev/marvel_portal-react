{"version":3,"sources":["components/appHeader/AppHeader.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/errorBoundary/ErrorBoundary.js","resources/img/mjolnir.png","services/MarvelService.js","hooks/http.hook.js","services/AbreviationText.js","components/spinner/Spinner.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/pages/MainPage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/app/App.js","index.js"],"names":["AppHeader","_jsxs","className","children","_jsx","Link","to","NavLink","end","style","_ref","isActive","_ref2","ErrorMessage","display","width","height","objectFit","margin","src","img","alt","ErrorBoundary","Component","constructor","arguments","state","error","componentDidCatch","errorInfo","console","log","this","setState","render","props","MarvelService","_apiBase","_apiKey","loading","request","useHttp","setLoading","useState","setError","useCallback","async","url","method","length","undefined","body","headers","response","fetch","ok","Error","concat","status","data","json","_transformCharacter","char","id","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","_transformComics","title","price","prices","getAllCharacters","limit","offset","res","results","map","getCharacter","getAllComics","AbriviationText","text","quantityChar","slice","Spinner","xmlns","background","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","RandomCharBlock","imgStyle","href","target","rel","RandomChar","setChar","useEffect","updateChar","onCharLoaded","Math","floor","random","then","catch","err","errorMessage","spinner","randomCharBlock","onClick","mjolnir","CharList","charList","setCharList","selectedCharId","setSelectedCharId","setOffset","limitEnded","setLimitEnded","newCharLoading","setNewCharLoading","onShowNewCharacters","newCharList","onCharListLoaded","onChangeSelectedChar","domElementChar","onUpdateSelectedChar","focus","content","arr","item","clazzName","e","onKeyDown","key","preventDefault","tabIndex","renderCharList","disabled","Skeleton","_Fragment","CharInfo","renderComics","index","selectedChar","renderCharInfo","MainPage","setSelectedChar","decoration","ComicsList","comicsList","setComicsList","firstLoadEnded","setFirstLoadEnded","onLoadNewComics","newComicsList","comicsLoaded","comicsElement","renderComicsList","ComicsPage","App","Router","Routes","Route","element","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8bedbb48.chunk.js","sourcesContent":["import {Link, NavLink} from 'react-router-dom';\n\nimport './appHeader.scss';\n\nconst AppHeader = () => {\n\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to=\"/\">\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink to=\"/\" end style={({isActive}) => ({'color': isActive ? '#9f0013' : 'inherit'})}>Characters</NavLink></li>\n                    /\n                    <li><NavLink to=\"/comics\" end style={({isActive}) => ({'color': isActive ? '#9f0013' : 'inherit'})}>Comics</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { Component } from \"react\";\r\nimport ErrorMessage from '../errorMessage/ErrorMessage'\r\n\r\nclass ErrorBoundary extends Component{\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo){\r\n        console.log(error, errorInfo);\r\n        this.setState({error: true});\r\n    }\r\n\r\n    render(){\r\n        if(this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst MarvelService = () => {\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=95c456a7ea2c5345495bb580c088c93e';\r\n    const _limitCharacters = 9;\r\n    const _offsetCharacters = 210;\r\n    const _limitComics = 8;\r\n    const _offsetComics = 0;\r\n\r\n    const {loading, error, request} = useHttp();\r\n    const getAllCharacters = async (limit = _limitCharacters, offset = _offsetCharacters) => {\r\n        const res = await request(`${_apiBase}characters?limit=${limit}&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description,\r\n            thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n   const getAllComics = async (offset = _offsetComics, limit = _limitComics) => {\r\n        const res = await request(`${_apiBase}comics?limit=${limit}&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(comics => _transformComics(comics));\r\n   }\r\n\r\n   const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            thumbnail: `${comics.thumbnail.path}.${comics.thumbnail.extension}`,\r\n            price: comics.prices[0].price,\r\n            url: comics.urls[0].url\r\n        }\r\n   }\r\n\r\n    return {\r\n        loading,\r\n        error,\r\n        getAllCharacters,\r\n        getCharacter,\r\n        getAllComics\r\n    }\r\n}\r\n\r\nexport default MarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n\r\n    const request = useCallback(async(url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n        setError(null);\r\n        setLoading(true);\r\n        \r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n            \r\n            const data = await response.json();\r\n            setLoading(false);\r\n            return data;\r\n    \r\n        } catch (error) {\r\n            setLoading(false);\r\n            setError(error);\r\n            throw error;\r\n        }\r\n    }, []);\r\n\r\n    return {loading, error, request}\r\n}","const AbriviationText = (text, quantityChar) => {\r\n    if(text.length === 0) {\r\n        return 'К сожалению, мы ещё не написали описание для этого персонажа :)'\r\n    }\r\n\r\n    if (text.length < quantityChar) {\r\n        return text;\r\n    };\r\n\r\n    return text.slice(0, quantityChar - 3) + '...';\r\n}\r\n\r\nexport default AbriviationText;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import './randomChar.scss';\nimport { useState, useEffect } from 'react';\n\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport MarvelService from '../../services/MarvelService';\nimport AbriviationText from '../../services/AbreviationText';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nconst RandomChar = () => {\n    const [char, setChar] = useState({});\n    const {loading, error, getCharacter} = MarvelService();\n          \n\n    useEffect(() => {\n        updateChar();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const onCharLoaded = (char) => {\n        setChar({...char, description: AbriviationText(char.description, 230)});\n    }\n\n    const updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        \n        getCharacter(id)\n            .then(onCharLoaded)\n            .catch(err => console.log(err))\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const randomCharBlock = !(error || loading) ? <RandomCharBlock char={char}/> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {spinner}\n            {errorMessage}\n            {randomCharBlock}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button \n                className=\"button button__main\"\n                onClick={updateChar}>\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n    \n}\n\nconst RandomCharBlock = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n                    <img src={thumbnail} alt={`Изображение ${name}`} className=\"randomchar__img\" style={imgStyle}/>\n                    <div className=\"randomchar__info\">\n                        <p className=\"randomchar__name\">{name}</p>\n                        <p className=\"randomchar__descr\">{description}</p>\n                        <div className=\"randomchar__btns\">\n                            <a href={homepage} className=\"button button__main\" target=\"_blank\" rel=\"noreferrer\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\" target=\"_blank\" rel=\"noreferrer\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n    )\n}\nexport default RandomChar;","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport MarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\n\nimport './charList.scss';\n\nconst CharList = (props) => {\n    \n    const [charList, setCharList] = useState([]),\n          [selectedCharId, setSelectedCharId] = useState(null),\n          [offset, setOffset] = useState(210),\n          [limitEnded, setLimitEnded] = useState(false),\n          [newCharLoading, setNewCharLoading] = useState(false);\n\n    const {loading, error, getAllCharacters} = MarvelService();\n\n    const onCharListLoaded = (newCharList) => {\n        let limitEnded = false;\n        if (1564 - offset <= 9) {\n            limitEnded = true;\n        }\n\n        setCharList(charList => [...charList, ...newCharList]);\n        setOffset(offset => offset + 9);\n        setLimitEnded(limitEnded);\n        setNewCharLoading(true);\n    }\n\n    const onShowNewCharacters = () => {\n        getAllCharacters(9, offset)\n            .then(charList => onCharListLoaded(charList))\n            .catch(err => console.log(err))\n    }\n\n    const onChangeSelectedChar = (char, domElementChar) => {\n        props.onUpdateSelectedChar(char);\n        setSelectedCharId(char.id);\n        domElementChar.focus();\n    }\n\n    useEffect(() => {\n        onShowNewCharacters();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const renderCharList = (arr) => {\n        const charList = arr.map(item => {\n            let imgStyle = {\"objectFit\" : \"cover\"};\n            const clazzName = selectedCharId === item.id ? 'char__item char__item_selected' : 'char__item';\n\n            if(item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {\"objectFit\" : \"unset\"}\n            }\n\n            return (\n                <li className={clazzName}\n                    key={item.id}\n                    onClick={(e) => {\n                        onChangeSelectedChar(item, e.target)\n                    }}\n                    onKeyDown={(e) => {\n                        if (e.key === 'Enter' || e.key === ' ') {\n                            e.preventDefault();\n                            onChangeSelectedChar(item, e.target)\n                        }\n                    }}\n                    tabIndex={0}>\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        })\n        \n        return (\n            <ul className=\"char__grid\">\n                {charList}\n            </ul>\n        )\n    }\n    \n    const spinner = loading && !newCharLoading ? <Spinner/> : null;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const content = renderCharList(charList)\n\n    return (\n        <div className=\"char__list\">\n            {spinner}\n            {errorMessage}\n            {content}\n            <button \n            className=\"button button__main button__long\"\n            onClick={e => onShowNewCharacters()}\n            style={{'display': limitEnded ? 'none' : 'block'}}\n            disabled={loading}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n    \n}\n\nCharList.propTypes = {\n    onUpdateSelectedChar: PropTypes.func\n}\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import PropTypes from 'prop-types';\n\nimport Skeleton from '../skeleton/Skeleton'\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\n    const renderCharInfo = (selectedChar) => {\n        const {name, description, thumbnail, homepage, wiki, comics} = selectedChar;\n        const imgStyle = thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ? {\"objectFit\": \"unset\"} : {\"objectFit\": \"cover\"}\n\n        return(\n            <>\n                <div className=\"char__basics\">\n                    <img src={thumbnail} \n                    alt={name}\n                    style={imgStyle}/>\n                    <div>\n                        <div className=\"char__info-name\">{name}</div>\n                        <div className=\"char__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"char__descr\">\n                    {description}\n                </div>\n                {renderComics(comics)}\n            </>    \n        )\n    }\n    \n    const renderComics = (comics) => {\n        return (\n            <>\n                <div className=\"char__comics\">Comics:</div>\n\n                {comics.length === 0 ? <div>Комиксов с этим персонажем нет</div> : null}\n\n                <ul className=\"char__comics-list\">\n                    {\n                        comics.map((item, index) => {\n                            if (index > 8) return null;\n    \n                            return (\n                                <li \n                                className=\"char__comics-item\"\n                                key={index}\n                                >\n                                    {item.name}\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n            </>\n        )\n    }\n\n    const {selectedChar} = props;\n    const content = selectedChar ? renderCharInfo(selectedChar) : <Skeleton/>\n\n    return (\n        <div className=\"char__info\">\n            {content}\n        </div>\n    )\n    \n}\n\nCharInfo.propTypes = {\n    selectedChar: PropTypes.object\n}\n\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","\r\nimport { useState } from \"react\";\r\n\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n\r\n    const [selectedChar, setSelectedChar] = useState(null);\r\n\r\n    const onUpdateSelectedChar = (char) => {\r\n        setSelectedChar(char);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar/>\r\n            </ErrorBoundary>\r\n                                \r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onUpdateSelectedChar={onUpdateSelectedChar}/>\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <CharInfo selectedChar={selectedChar}/>\r\n                </ErrorBoundary>\r\n            </div>\r\n\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default MainPage;","import {useState, useEffect} from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\n\nimport './comicsList.scss';\n\n\nconst ComicsList = () => {\n    const [comicsList, setComicsList] = useState([]);\n    const [offset, setOffset] = useState(0);\n    const [limitEnded, setLimitEnded] = useState(false);\n    const [firstLoadEnded, setFirstLoadEnded] = useState(false);\n\n    const {getAllComics, loading, error} = MarvelService();\n\n    useEffect(() => {\n        onLoadNewComics();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const comicsLoaded = (newComicsList) => {\n        if (offset >= 59339 - 8) {\n            setLimitEnded(true)\n        }\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setOffset(offset => offset + 8);\n        setFirstLoadEnded(true);\n    }\n\n    const onLoadNewComics = () => {\n        getAllComics(offset)\n            .then(newComicsList => comicsLoaded(newComicsList))\n            .catch(err => console.log(err))\n    }\n\n    const renderComicsList = (comics) => {\n        const comicsElement = comics.map(item => {\n            const price = item.price === 0 ? 'NOT AVAILABLE' : `${item.price}$`;\n\n            return (\n                <li className=\"comics__item\" key={item.id}>\n                    <a href={item.url} target=\"_blank\" rel=\"noreferrer\">\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{price}</div>\n                    </a>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {comicsElement}\n            </ul>\n        )\n    }\n\n    const content = renderComicsList(comicsList);\n    const spinner = loading && !firstLoadEnded ? <Spinner/> : null;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    \n    return (\n        <div className=\"comics__list\">\n            {spinner}\n            {errorMessage}\n            {content}\n            <button \n            className=\"button button__main button__long\" \n            onClick={onLoadNewComics}\n            style={{'display': limitEnded ? 'none' : 'block'}}\n            disabled={loading}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import ComicsList from '../comicsList/ComicsList';\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <ComicsList/>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport MainPage from \"../pages/MainPage\";\nimport ComicsPage from \"../pages/ComicsPage\";\n\nconst App = () => {\n\n    return (\n        <Router>\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <Routes>\n                        <Route path='/' element={<MainPage/>} />\n                        <Route path='/comics' element={<ComicsPage/>} />\n                    </Routes>\n                </main>\n            </div>\n        </Router>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n    <App />, document.getElementById('root')\n);\n\n"],"sourceRoot":""}