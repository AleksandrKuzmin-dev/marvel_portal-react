{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/errorBoundary/ErrorBoundary.js","components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/MarvelService.js","hooks/http.hook.js","services/AbreviationText.js","components/spinner/Spinner.js","components/randomChar/RandomChar.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","ErrorBoundary","Component","constructor","arguments","state","error","componentDidCatch","errorInfo","console","log","this","setState","render","props","children","AppHeader","_jsxs","className","href","MarvelService","_apiBase","_apiKey","loading","request","clearError","useHttp","setLoading","useState","setError","useCallback","async","url","method","length","undefined","body","headers","response","fetch","ok","Error","concat","status","data","json","_transformCharacter","char","id","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","getAllCharacters","limit","offset","res","results","map","getCharacter","AbriviationText","text","quantityChar","slice","Spinner","xmlns","background","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","RandomCharBlock","_ref","imgStyle","target","rel","RandomChar","setChar","useEffect","updateChar","onCharLoaded","Math","floor","random","then","errorMessage","spinner","randomCharBlock","onClick","mjolnir","CharInfo","App","selectedChar","setSelectedChar","decoration","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c78f5d1c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { Component } from \"react\";\r\nimport ErrorMessage from '../errorMessage/ErrorMessage'\r\n\r\nclass ErrorBoundary extends Component{\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo){\r\n        console.log('Сработал предохранитель, ошибка ниже:')\r\n        console.log(error, errorInfo);\r\n        this.setState({error: true});\r\n    }\r\n\r\n    render(){\r\n        if(this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst MarvelService = () => {\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/sd';\r\n    const _apiKey = 'apikey=95c456a7ea2c5345495bb580c088c93e';\r\n    const _limitCharacters = 9;\r\n    const _offsetCharacters = 210;\r\n\r\n    const {loading, error, request, clearError} = useHttp();\r\n\r\n    const getAllCharacters = async (limit = _limitCharacters, offset = _offsetCharacters) => {\r\n        const res = await request(`${_apiBase}characters?limit=${limit}&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description,\r\n            thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    return {\r\n        loading,\r\n        error,\r\n        clearError,\r\n        getAllCharacters,\r\n        getCharacter\r\n    }\r\n}\r\n\r\nexport default MarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n\r\n    const request = useCallback(async(url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n        setLoading(true);\r\n\r\n        try {\r\n            setError(null);\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n            \r\n            const data = await response.json();\r\n            setLoading(false);\r\n            return data;\r\n    \r\n        } catch (error) {\r\n            setLoading(false);\r\n            setError(error);\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => {\r\n        setError(null);\r\n    }, [])\r\n\r\n    return {loading, error, request, clearError}\r\n}","const AbriviationText = (text, quantityChar) => {\r\n    if(text.length === 0) {\r\n        return 'К сожалению, мы ещё не написали описание для этого персонажа :)'\r\n    }\r\n\r\n    if (text.length < quantityChar) {\r\n        return text;\r\n    };\r\n\r\n    return text.slice(0, quantityChar - 3) + '...';\r\n}\r\n\r\nexport default AbriviationText;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import './randomChar.scss';\nimport { useState, useEffect } from 'react';\n\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport MarvelService from '../../services/MarvelService';\nimport AbriviationText from '../../services/AbreviationText';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nconst RandomChar = () => {\n    const [char, setChar] = useState({});\n    const {loading, error, clearError, getCharacter} = MarvelService();\n          \n\n    useEffect(() => {\n        updateChar();\n    }, [])\n\n    const onCharLoaded = (char) => {\n        setChar({...char, description: AbriviationText(char.description, 230)});\n    }\n\n    const updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        \n        getCharacter(id)\n            .then(onCharLoaded)\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const randomCharBlock = !(error || loading) ? <RandomCharBlock char={char}/> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {spinner}\n            {errorMessage}\n            {randomCharBlock}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button \n                className=\"button button__main\"\n                onClick={updateChar}>\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n    \n}\n\nconst RandomCharBlock = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n                    <img src={thumbnail} alt={`Изображение ${name}`} className=\"randomchar__img\" style={imgStyle}/>\n                    <div className=\"randomchar__info\">\n                        <p className=\"randomchar__name\">{name}</p>\n                        <p className=\"randomchar__descr\">{description}</p>\n                        <div className=\"randomchar__btns\">\n                            <a href={homepage} className=\"button button__main\" target=\"_blank\" rel=\"noreferrer\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\" target=\"_blank\" rel=\"noreferrer\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n    )\n}\nexport default RandomChar;","import PropTypes from 'prop-types';\n\nimport Skeleton from '../skeleton/Skeleton'\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\n    const renderCharInfo = (selectedChar) => {\n        const {name, description, thumbnail, homepage, wiki, comics} = selectedChar;\n        const imgStyle = thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ? {\"objectFit\": \"unset\"} : {\"objectFit\": \"cover\"}\n\n        return(\n            <>\n                <div className=\"char__basics\">\n                    <img src={thumbnail} \n                    alt={name}\n                    style={imgStyle}/>\n                    <div>\n                        <div className=\"char__info-name\">{name}</div>\n                        <div className=\"char__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"char__descr\">\n                    {description}\n                </div>\n                {renderComics(comics)}\n            </>    \n        )\n    }\n    \n    const renderComics = (comics) => {\n        return (\n            <>\n                <div className=\"char__comics\">Comics:</div>\n\n                {comics.length === 0 ? <div>Комиксов с этим персонажем нет</div> : null}\n\n                <ul className=\"char__comics-list\">\n                    {\n                        comics.map((item, index) => {\n                            if (index > 8) return null;\n    \n                            return (\n                                <li \n                                className=\"char__comics-item\"\n                                key={index}\n                                >\n                                    {item.name}\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n            </>\n        )\n    }\n\n    const {selectedChar} = props;\n    const content = selectedChar ? renderCharInfo(selectedChar) : <Skeleton/>\n\n    return (\n        <div className=\"char__info\">\n            {content}\n        </div>\n    )\n    \n}\n\nCharInfo.propTypes = {\n    selectedChar: PropTypes.object\n}\n\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport decoration from '../../resources/img/vision.png';\n\n\nconst App = () => {\n    const [selectedChar, setSelectedChar] = useState(null);\n\n    const onUpdateSelectedChar = (char) => {\n        setSelectedChar(char);\n    }\n\n    return (\n        <div className=\"app\">\n            <AppHeader/>\n            <main>\n                <ErrorBoundary>\n                    <RandomChar/>\n                </ErrorBoundary>\n                \n                {/* <div className=\"char__content\">\n                    <ErrorBoundary>\n                        <CharList onUpdateSelectedChar={onUpdateSelectedChar}/>\n                    </ErrorBoundary>\n                    <ErrorBoundary>\n                        <CharInfo selectedChar={selectedChar}/>\n                    </ErrorBoundary>\n                </div> */}\n                <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n            </main>\n        </div>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n    <App />, document.getElementById('root')\n);\n\n"],"sourceRoot":""}